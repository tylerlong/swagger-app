// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test model add model property 1`] = `
<Provider
  store={
    Object {
      "actions": Array [
        Object {
          "index": 0,
          "props": Object {
            "createdAt": 1499601066647,
            "description": "Description",
            "name": "name",
            "type": "string",
          },
          "type": "ADD_MODEL_PROPERTY",
        },
      ],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1499601066647,
                "description": "Description",
                "name": "name",
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={0}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={0}
                                model={
                                  Object {
                                    "createdAt": 1498875254895,
                                    "name": "AccountInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875254896,
                                        "description": "Internal identifier of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "id",
                                        "required": true,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254897,
                                        "description": "Canonical URI of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254898,
                                        "description": "Main phone number of the current account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "mainNumber",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1499601066647,
                                        "description": "Description",
                                        "name": "name",
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"AccountInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "AccountInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "AccountInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "AccountInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="AccountInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="AccountInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="id"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            id
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="mainNumber"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            mainNumber
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="name"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            name
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg ant-btn-clicked"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model delete model 1`] = `
<Provider
  store={
    Object {
      "actions": Array [
        Object {
          "index": 0,
          "type": "DELETE_MODEL",
        },
      ],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model delete model property 1`] = `
<Provider
  store={
    Object {
      "actions": Array [
        Object {
          "index1": 0,
          "index2": 0,
          "type": "DELETE_MODEL_PROPERTY",
        },
      ],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={0}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={0}
                                model={
                                  Object {
                                    "createdAt": 1498875254895,
                                    "name": "AccountInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875254897,
                                        "description": "Canonical URI of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254898,
                                        "description": "Main phone number of the current account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "mainNumber",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"AccountInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "AccountInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "AccountInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "AccountInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="AccountInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="AccountInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="mainNumber"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            mainNumber
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model model properties list index #0 1`] = `
<Provider
  store={
    Object {
      "actions": Array [],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={0}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={0}
                                model={
                                  Object {
                                    "createdAt": 1498875254895,
                                    "name": "AccountInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875254896,
                                        "description": "Internal identifier of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "id",
                                        "required": true,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254897,
                                        "description": "Canonical URI of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254898,
                                        "description": "Main phone number of the current account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "mainNumber",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"AccountInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "AccountInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "AccountInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                        visible={false}
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "AccountInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          popupVisible={false}
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                          visible={false}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="AccountInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="AccountInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="id"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            id
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="mainNumber"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            mainNumber
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model model properties list index #1 1`] = `
<Provider
  store={
    Object {
      "actions": Array [],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={1}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={1}
                                model={
                                  Object {
                                    "createdAt": 1498875255421,
                                    "name": "AnsweringRuleInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875255422,
                                        "description": "Internal identifier of an asnwering rule",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "id",
                                        "required": true,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875255423,
                                        "description": "Canonical URI to the answering rule resource",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875255424,
                                        "description": "Type of an answering rule",
                                        "enum": Array [
                                          "BusinessHours",
                                          "AfterHours",
                                          "Custom",
                                        ],
                                        "isArray": false,
                                        "name": "type",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"AnsweringRuleInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "AnsweringRuleInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "AnsweringRuleInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                        visible={false}
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "AnsweringRuleInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          popupVisible={false}
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                          visible={false}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="AnsweringRuleInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="AnsweringRuleInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="id"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            id
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="type"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            type
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model model properties list index #2 1`] = `
<Provider
  store={
    Object {
      "actions": Array [],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={2}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={2}
                                model={
                                  Object {
                                    "createdAt": 1498875255943,
                                    "name": "VersionInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875255944,
                                        "description": "Canonical URI of API versions",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": true,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875255945,
                                        "description": "Version of the RingCentral REST API",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "versionString",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875255946,
                                        "description": "Release date of this version",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "releaseDate",
                                        "required": false,
                                        "type": "date-time",
                                      },
                                      Object {
                                        "createdAt": 1498875255947,
                                        "description": "URI part determining the current version",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uriString",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"VersionInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "VersionInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "VersionInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                        visible={false}
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "VersionInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          popupVisible={false}
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                          visible={false}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="VersionInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="VersionInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="releaseDate"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            releaseDate
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uriString"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uriString
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="versionString"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            versionString
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model models list 1`] = `
<Provider
  store={
    Object {
      "actions": Array [],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model update model fields 1`] = `
<Provider
  store={
    Object {
      "actions": Array [
        Object {
          "path": Array [
            "models",
            0,
            "name",
          ],
          "type": "SET_PROP",
          "value": "Hello",
        },
        Object {
          "path": Array [
            "models",
            0,
            "name",
          ],
          "type": "SET_PROP",
          "value": "World",
        },
      ],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "World",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "Internal identifier of an account",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="World"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    World
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={0}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={0}
                                model={
                                  Object {
                                    "createdAt": 1498875254895,
                                    "name": "World",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875254896,
                                        "description": "Internal identifier of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "id",
                                        "required": true,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254897,
                                        "description": "Canonical URI of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254898,
                                        "description": "Main phone number of the current account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "mainNumber",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"World\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "World"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "World"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "World"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="World"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="World"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="id"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            id
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="mainNumber"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            mainNumber
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;

exports[`test model update model property fields 1`] = `
<Provider
  store={
    Object {
      "actions": Array [
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "name",
          ],
          "type": "SET_PROP",
          "value": "Hello",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "name",
          ],
          "type": "SET_PROP",
          "value": "World",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "description",
          ],
          "type": "SET_PROP",
          "value": "Hello",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "description",
          ],
          "type": "SET_PROP",
          "value": "World",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "type",
          ],
          "type": "SET_PROP",
          "value": "int64",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "type",
          ],
          "type": "SET_PROP",
          "value": "binary",
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "enum",
          ],
          "type": "SET_PROP",
          "value": Array [
            "Hello",
            "World",
          ],
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "required",
          ],
          "type": "SET_PROP",
          "value": true,
        },
        Object {
          "path": Array [
            "models",
            0,
            "properties",
            0,
            "isArray",
          ],
          "type": "SET_PROP",
          "value": true,
        },
      ],
      "dispatch": [Function],
      "getState": [Function],
      "logicMiddleware": [Function],
      "replaceReducer": [Function],
      "resetActions": [Function],
      "subscribe": [Function],
      "whenComplete": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Models)>
    <Models
      addModel={[Function]}
      models={
        Array [
          Object {
            "createdAt": 1498875254895,
            "name": "AccountInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875254896,
                "description": "World",
                "enum": Array [
                  "Hello",
                  "World",
                ],
                "isArray": true,
                "name": "World",
                "required": true,
                "type": "binary",
              },
              Object {
                "createdAt": 1498875254897,
                "description": "Canonical URI of an account",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875254898,
                "description": "Main phone number of the current account",
                "enum": Array [],
                "isArray": false,
                "name": "mainNumber",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255421,
            "name": "AnsweringRuleInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255422,
                "description": "Internal identifier of an asnwering rule",
                "enum": Array [],
                "isArray": false,
                "name": "id",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255423,
                "description": "Canonical URI to the answering rule resource",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255424,
                "description": "Type of an answering rule",
                "enum": Array [
                  "BusinessHours",
                  "AfterHours",
                  "Custom",
                ],
                "isArray": false,
                "name": "type",
                "required": false,
                "type": "string",
              },
            ],
          },
          Object {
            "createdAt": 1498875255943,
            "name": "VersionInfo",
            "properties": Array [
              Object {
                "createdAt": 1498875255944,
                "description": "Canonical URI of API versions",
                "enum": Array [],
                "isArray": false,
                "name": "uri",
                "required": true,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255945,
                "description": "Version of the RingCentral REST API",
                "enum": Array [],
                "isArray": false,
                "name": "versionString",
                "required": false,
                "type": "string",
              },
              Object {
                "createdAt": 1498875255946,
                "description": "Release date of this version",
                "enum": Array [],
                "isArray": false,
                "name": "releaseDate",
                "required": false,
                "type": "date-time",
              },
              Object {
                "createdAt": 1498875255947,
                "description": "URI part determining the current version",
                "enum": Array [],
                "isArray": false,
                "name": "uriString",
                "required": false,
                "type": "string",
              },
            ],
          },
        ]
      }
    >
      <div>
        <h2>
          Models
        </h2>
        <Collapse
          accordion={true}
          bordered={true}
          openAnimation={
            Object {
              "appear": [Function],
              "enter": [Function],
              "leave": [Function],
            }
          }
          prefixCls="ant-collapse"
        >
          <Collapse
            accordion={true}
            bordered={true}
            className=""
            destroyInactivePanel={false}
            onChange={[Function]}
            openAnimation={
              Object {
                "appear": [Function],
                "enter": [Function],
                "leave": [Function],
              }
            }
            prefixCls="ant-collapse"
          >
            <div
              className="ant-collapse"
            >
              <CollapsePanel
                destroyInactivePanel={false}
                header="AccountInfo"
                headerClass=""
                isActive={true}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item ant-collapse-item-active"
                >
                  <div
                    aria-expanded={true}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AccountInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={true}
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse-content ant-collapse-content-active"
                          role="tabpanel"
                        >
                          <div
                            className="ant-collapse-content-box"
                          >
                            <Connect(FormItem)
                              index={0}
                            >
                              <FormItem
                                addModelProperty={[Function]}
                                deleteModel={[Function]}
                                index={0}
                                model={
                                  Object {
                                    "createdAt": 1498875254895,
                                    "name": "AccountInfo",
                                    "properties": Array [
                                      Object {
                                        "createdAt": 1498875254896,
                                        "description": "World",
                                        "enum": Array [
                                          "Hello",
                                          "World",
                                        ],
                                        "isArray": true,
                                        "name": "World",
                                        "required": true,
                                        "type": "binary",
                                      },
                                      Object {
                                        "createdAt": 1498875254897,
                                        "description": "Canonical URI of an account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "uri",
                                        "required": false,
                                        "type": "string",
                                      },
                                      Object {
                                        "createdAt": 1498875254898,
                                        "description": "Main phone number of the current account",
                                        "enum": Array [],
                                        "isArray": false,
                                        "name": "mainNumber",
                                        "required": false,
                                        "type": "string",
                                      },
                                    ],
                                  }
                                }
                                setProp={[Function]}
                              >
                                <div>
                                  <_a
                                    cancelText="No"
                                    okText="Yes"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="Are you sure to delete model \\"AccountInfo\\"?"
                                    transitionName="zoom-big"
                                    trigger="click"
                                  >
                                    <Tooltip
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      onConfirm={[Function]}
                                      onVisibleChange={[Function]}
                                      overlay={
                                        <div>
                                          <div
                                            className="ant-popover-inner-content"
                                          >
                                            <div
                                              className="ant-popover-message"
                                            >
                                              <Icon
                                                type="exclamation-circle"
                                              />
                                              <div
                                                className="ant-popover-message-title"
                                              >
                                                Are you sure to delete model "AccountInfo"?
                                              </div>
                                            </div>
                                            <div
                                              className="ant-popover-buttons"
                                            >
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                              >
                                                No
                                              </Button>
                                              <Button
                                                clicked={false}
                                                ghost={false}
                                                loading={false}
                                                onClick={[Function]}
                                                prefixCls="ant-btn"
                                                size="small"
                                                type="primary"
                                              >
                                                Yes
                                              </Button>
                                            </div>
                                          </div>
                                        </div>
                                      }
                                      placement="top"
                                      prefixCls="ant-popover"
                                      transitionName="zoom-big"
                                      trigger="click"
                                    >
                                      <Tooltip
                                        align={Object {}}
                                        arrowContent={null}
                                        arrowPointAtCenter={false}
                                        autoAdjustOverflow={true}
                                        builtinPlacements={
                                          Object {
                                            "bottom": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tc",
                                                "bc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomLeft": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "bottomRight": Object {
                                              "offset": Array [
                                                0,
                                                4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "left": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cr",
                                                "cl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftBottom": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "bl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "leftTop": Object {
                                              "offset": Array [
                                                -4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tr",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "right": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "cl",
                                                "cr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightBottom": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "br",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "rightTop": Object {
                                              "offset": Array [
                                                4,
                                                0,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "tl",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "top": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bc",
                                                "tc",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topLeft": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "bl",
                                                "tl",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                            "topRight": Object {
                                              "offset": Array [
                                                0,
                                                -4,
                                              ],
                                              "overflow": Object {
                                                "adjustX": 1,
                                                "adjustY": 1,
                                              },
                                              "points": Array [
                                                "br",
                                                "tr",
                                              ],
                                              "targetOffset": Array [
                                                0,
                                                0,
                                              ],
                                            },
                                          }
                                        }
                                        destroyTooltipOnHide={false}
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        onConfirm={[Function]}
                                        onPopupAlign={[Function]}
                                        onVisibleChange={[Function]}
                                        overlay={
                                          <div>
                                            <div
                                              className="ant-popover-inner-content"
                                            >
                                              <div
                                                className="ant-popover-message"
                                              >
                                                <Icon
                                                  type="exclamation-circle"
                                                />
                                                <div
                                                  className="ant-popover-message-title"
                                                >
                                                  Are you sure to delete model "AccountInfo"?
                                                </div>
                                              </div>
                                              <div
                                                className="ant-popover-buttons"
                                              >
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                >
                                                  No
                                                </Button>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="small"
                                                  type="primary"
                                                >
                                                  Yes
                                                </Button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        placement="top"
                                        prefixCls="ant-popover"
                                        transitionName="zoom-big"
                                        trigger="click"
                                      >
                                        <Trigger
                                          action="click"
                                          afterPopupVisibleChange={[Function]}
                                          arrowContent={null}
                                          arrowPointAtCenter={false}
                                          autoAdjustOverflow={true}
                                          blurDelay={0.15}
                                          builtinPlacements={
                                            Object {
                                              "bottom": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tc",
                                                  "bc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "bottomRight": Object {
                                                "offset": Array [
                                                  0,
                                                  4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "left": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cr",
                                                  "cl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftBottom": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "bl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "leftTop": Object {
                                                "offset": Array [
                                                  -4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tr",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "right": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "cl",
                                                  "cr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightBottom": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "br",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "rightTop": Object {
                                                "offset": Array [
                                                  4,
                                                  0,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "tl",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "top": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bc",
                                                  "tc",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topLeft": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "bl",
                                                  "tl",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "topRight": Object {
                                                "offset": Array [
                                                  0,
                                                  -4,
                                                ],
                                                "overflow": Object {
                                                  "adjustX": 1,
                                                  "adjustY": 1,
                                                },
                                                "points": Array [
                                                  "br",
                                                  "tr",
                                                ],
                                                "targetOffset": Array [
                                                  0,
                                                  0,
                                                ],
                                              },
                                            }
                                          }
                                          defaultPopupVisible={false}
                                          destroyPopupOnHide={false}
                                          focusDelay={0}
                                          getDocument={[Function]}
                                          getPopupClassNameFromAlign={[Function]}
                                          hideAction={Array []}
                                          mask={false}
                                          maskClosable={true}
                                          mouseEnterDelay={0.1}
                                          mouseLeaveDelay={0.1}
                                          onConfirm={[Function]}
                                          onPopupAlign={[Function]}
                                          onPopupVisibleChange={[Function]}
                                          overlay={
                                            <div>
                                              <div
                                                className="ant-popover-inner-content"
                                              >
                                                <div
                                                  className="ant-popover-message"
                                                >
                                                  <Icon
                                                    type="exclamation-circle"
                                                  />
                                                  <div
                                                    className="ant-popover-message-title"
                                                  >
                                                    Are you sure to delete model "AccountInfo"?
                                                  </div>
                                                </div>
                                                <div
                                                  className="ant-popover-buttons"
                                                >
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                  >
                                                    No
                                                  </Button>
                                                  <Button
                                                    clicked={false}
                                                    ghost={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    prefixCls="ant-btn"
                                                    size="small"
                                                    type="primary"
                                                  >
                                                    Yes
                                                  </Button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          popup={[Function]}
                                          popupAlign={Object {}}
                                          popupClassName=""
                                          popupPlacement="top"
                                          popupStyle={Object {}}
                                          popupTransitionName="zoom-big"
                                          prefixCls="ant-popover"
                                          showAction={Array []}
                                        >
                                          <Button
                                            clicked={false}
                                            ghost={false}
                                            loading={false}
                                            onClick={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchStart={[Function]}
                                            prefixCls="ant-btn"
                                            type="danger"
                                          >
                                            <button
                                              className="ant-btn ant-btn-danger"
                                              onClick={[Function]}
                                              onMouseDown={[Function]}
                                              onTouchStart={[Function]}
                                              type="button"
                                            >
                                              <Icon
                                                type="arrow-up"
                                              >
                                                <i
                                                  className="anticon anticon-arrow-up"
                                                />
                                              </Icon>
                                              <span>
                                                Delete
                                              </span>
                                            </button>
                                          </Button>
                                        </Trigger>
                                      </Tooltip>
                                    </Tooltip>
                                  </_a>
                                  <FormItem
                                    colon={true}
                                    hasFeedback={false}
                                    label="Name"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    prefixCls="ant-form"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 12,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Row
                                      className="ant-form-item"
                                      gutter={0}
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                          sm={
                                            Object {
                                              "span": 6,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                          >
                                            <label
                                              className=""
                                              htmlFor={null}
                                              onClick={[Function]}
                                              title="Name"
                                            >
                                              Name
                                            </label>
                                          </div>
                                        </Col>
                                        <Col
                                          className="ant-form-item-control-wrapper"
                                          sm={
                                            Object {
                                              "span": 12,
                                            }
                                          }
                                          xs={
                                            Object {
                                              "span": 24,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-12"
                                          >
                                            <div
                                              className="ant-form-item-control "
                                            >
                                              <Input
                                                disabled={false}
                                                onChange={[Function]}
                                                placeholder="Name"
                                                prefixCls="ant-input"
                                                size="large"
                                                type="text"
                                                value="AccountInfo"
                                              >
                                                <input
                                                  className="ant-input ant-input-lg"
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Name"
                                                  size="large"
                                                  type="text"
                                                  value="AccountInfo"
                                                />
                                              </Input>
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </FormItem>
                                  <Row
                                    gutter={0}
                                    justify="center"
                                    type="flex"
                                  >
                                    <div
                                      className="ant-row-flex ant-row-flex-center"
                                    >
                                      <Col
                                        sm={18}
                                        xs={24}
                                      >
                                        <div
                                          className="ant-col-xs-24 ant-col-sm-18"
                                        >
                                          <Card
                                            title="Properties"
                                          >
                                            <div
                                              className="ant-card ant-card-bordered"
                                            >
                                              <div
                                                className="ant-card-head"
                                              >
                                                <div
                                                  className="ant-card-head-title"
                                                >
                                                  Properties
                                                </div>
                                              </div>
                                              <div
                                                className="ant-card-body"
                                              >
                                                <Collapse
                                                  accordion={true}
                                                  bordered={true}
                                                  openAnimation={
                                                    Object {
                                                      "appear": [Function],
                                                      "enter": [Function],
                                                      "leave": [Function],
                                                    }
                                                  }
                                                  prefixCls="ant-collapse"
                                                >
                                                  <Collapse
                                                    accordion={true}
                                                    bordered={true}
                                                    className=""
                                                    destroyInactivePanel={false}
                                                    onChange={[Function]}
                                                    openAnimation={
                                                      Object {
                                                        "appear": [Function],
                                                        "enter": [Function],
                                                        "leave": [Function],
                                                      }
                                                    }
                                                    prefixCls="ant-collapse"
                                                  >
                                                    <div
                                                      className="ant-collapse"
                                                    >
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="mainNumber"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            mainNumber
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="uri"
                                                        headerClass=""
                                                        isActive={false}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item"
                                                        >
                                                          <div
                                                            aria-expanded={false}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            uri
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={false}
                                                                prefixCls="ant-collapse"
                                                              />
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                      <CollapsePanel
                                                        destroyInactivePanel={false}
                                                        header="World"
                                                        headerClass=""
                                                        isActive={true}
                                                        onItemClick={[Function]}
                                                        openAnimation={
                                                          Object {
                                                            "appear": [Function],
                                                            "enter": [Function],
                                                            "leave": [Function],
                                                          }
                                                        }
                                                        prefixCls="ant-collapse"
                                                        showArrow={true}
                                                      >
                                                        <div
                                                          className="ant-collapse-item ant-collapse-item-active"
                                                        >
                                                          <div
                                                            aria-expanded={true}
                                                            className="ant-collapse-header"
                                                            onClick={[Function]}
                                                            role="tab"
                                                          >
                                                            <i
                                                              className="arrow"
                                                            />
                                                            World
                                                          </div>
                                                          <Animate
                                                            animation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            component=""
                                                            componentProps={Object {}}
                                                            exclusive={true}
                                                            onAppear={[Function]}
                                                            onEnd={[Function]}
                                                            onEnter={[Function]}
                                                            onLeave={[Function]}
                                                            showProp="isActive"
                                                            transitionAppear={false}
                                                            transitionEnter={true}
                                                            transitionLeave={true}
                                                          >
                                                            <AnimateChild
                                                              animation={
                                                                Object {
                                                                  "appear": [Function],
                                                                  "enter": [Function],
                                                                  "leave": [Function],
                                                                }
                                                              }
                                                              transitionAppear={false}
                                                              transitionEnter={true}
                                                              transitionLeave={true}
                                                            >
                                                              <PanelContent
                                                                destroyInactivePanel={false}
                                                                isActive={true}
                                                                prefixCls="ant-collapse"
                                                              >
                                                                <div
                                                                  className="ant-collapse-content ant-collapse-content-active"
                                                                  role="tabpanel"
                                                                >
                                                                  <div
                                                                    className="ant-collapse-content-box"
                                                                  >
                                                                    <Connect(SubFormItem)
                                                                      index1={0}
                                                                      index2={0}
                                                                    >
                                                                      <SubFormItem
                                                                        deleteModelProperty={[Function]}
                                                                        index1={0}
                                                                        index2={0}
                                                                        prop={
                                                                          Object {
                                                                            "createdAt": 1498875254896,
                                                                            "description": "World",
                                                                            "enum": Array [
                                                                              "Hello",
                                                                              "World",
                                                                            ],
                                                                            "isArray": true,
                                                                            "name": "World",
                                                                            "required": true,
                                                                            "type": "binary",
                                                                          }
                                                                        }
                                                                        setProp={[Function]}
                                                                      >
                                                                        <div>
                                                                          <_a
                                                                            cancelText="No"
                                                                            okText="Yes"
                                                                            okType="primary"
                                                                            onConfirm={[Function]}
                                                                            placement="top"
                                                                            prefixCls="ant-popover"
                                                                            title="Are you sure to delete property \\"World\\"?"
                                                                            transitionName="zoom-big"
                                                                            trigger="click"
                                                                          >
                                                                            <Tooltip
                                                                              arrowPointAtCenter={false}
                                                                              autoAdjustOverflow={true}
                                                                              mouseEnterDelay={0.1}
                                                                              mouseLeaveDelay={0.1}
                                                                              onConfirm={[Function]}
                                                                              onVisibleChange={[Function]}
                                                                              overlay={
                                                                                <div>
                                                                                  <div
                                                                                    className="ant-popover-inner-content"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-popover-message"
                                                                                    >
                                                                                      <Icon
                                                                                        type="exclamation-circle"
                                                                                      />
                                                                                      <div
                                                                                        className="ant-popover-message-title"
                                                                                      >
                                                                                        Are you sure to delete property "World"?
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className="ant-popover-buttons"
                                                                                    >
                                                                                      <Button
                                                                                        clicked={false}
                                                                                        ghost={false}
                                                                                        loading={false}
                                                                                        onClick={[Function]}
                                                                                        prefixCls="ant-btn"
                                                                                        size="small"
                                                                                      >
                                                                                        No
                                                                                      </Button>
                                                                                      <Button
                                                                                        clicked={false}
                                                                                        ghost={false}
                                                                                        loading={false}
                                                                                        onClick={[Function]}
                                                                                        prefixCls="ant-btn"
                                                                                        size="small"
                                                                                        type="primary"
                                                                                      >
                                                                                        Yes
                                                                                      </Button>
                                                                                    </div>
                                                                                  </div>
                                                                                </div>
                                                                              }
                                                                              placement="top"
                                                                              prefixCls="ant-popover"
                                                                              transitionName="zoom-big"
                                                                              trigger="click"
                                                                            >
                                                                              <Tooltip
                                                                                align={Object {}}
                                                                                arrowContent={null}
                                                                                arrowPointAtCenter={false}
                                                                                autoAdjustOverflow={true}
                                                                                builtinPlacements={
                                                                                  Object {
                                                                                    "bottom": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "tc",
                                                                                        "bc",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "bottomLeft": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "tl",
                                                                                        "bl",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "bottomRight": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "tr",
                                                                                        "br",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "left": Object {
                                                                                      "offset": Array [
                                                                                        -4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "cr",
                                                                                        "cl",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "leftBottom": Object {
                                                                                      "offset": Array [
                                                                                        -4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "br",
                                                                                        "bl",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "leftTop": Object {
                                                                                      "offset": Array [
                                                                                        -4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "tr",
                                                                                        "tl",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "right": Object {
                                                                                      "offset": Array [
                                                                                        4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "cl",
                                                                                        "cr",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "rightBottom": Object {
                                                                                      "offset": Array [
                                                                                        4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "bl",
                                                                                        "br",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "rightTop": Object {
                                                                                      "offset": Array [
                                                                                        4,
                                                                                        0,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "tl",
                                                                                        "tr",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "top": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        -4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "bc",
                                                                                        "tc",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "topLeft": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        -4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "bl",
                                                                                        "tl",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                    "topRight": Object {
                                                                                      "offset": Array [
                                                                                        0,
                                                                                        -4,
                                                                                      ],
                                                                                      "overflow": Object {
                                                                                        "adjustX": 1,
                                                                                        "adjustY": 1,
                                                                                      },
                                                                                      "points": Array [
                                                                                        "br",
                                                                                        "tr",
                                                                                      ],
                                                                                      "targetOffset": Array [
                                                                                        0,
                                                                                        0,
                                                                                      ],
                                                                                    },
                                                                                  }
                                                                                }
                                                                                destroyTooltipOnHide={false}
                                                                                mouseEnterDelay={0.1}
                                                                                mouseLeaveDelay={0.1}
                                                                                onConfirm={[Function]}
                                                                                onPopupAlign={[Function]}
                                                                                onVisibleChange={[Function]}
                                                                                overlay={
                                                                                  <div>
                                                                                    <div
                                                                                      className="ant-popover-inner-content"
                                                                                    >
                                                                                      <div
                                                                                        className="ant-popover-message"
                                                                                      >
                                                                                        <Icon
                                                                                          type="exclamation-circle"
                                                                                        />
                                                                                        <div
                                                                                          className="ant-popover-message-title"
                                                                                        >
                                                                                          Are you sure to delete property "World"?
                                                                                        </div>
                                                                                      </div>
                                                                                      <div
                                                                                        className="ant-popover-buttons"
                                                                                      >
                                                                                        <Button
                                                                                          clicked={false}
                                                                                          ghost={false}
                                                                                          loading={false}
                                                                                          onClick={[Function]}
                                                                                          prefixCls="ant-btn"
                                                                                          size="small"
                                                                                        >
                                                                                          No
                                                                                        </Button>
                                                                                        <Button
                                                                                          clicked={false}
                                                                                          ghost={false}
                                                                                          loading={false}
                                                                                          onClick={[Function]}
                                                                                          prefixCls="ant-btn"
                                                                                          size="small"
                                                                                          type="primary"
                                                                                        >
                                                                                          Yes
                                                                                        </Button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                }
                                                                                placement="top"
                                                                                prefixCls="ant-popover"
                                                                                transitionName="zoom-big"
                                                                                trigger="click"
                                                                              >
                                                                                <Trigger
                                                                                  action="click"
                                                                                  afterPopupVisibleChange={[Function]}
                                                                                  arrowContent={null}
                                                                                  arrowPointAtCenter={false}
                                                                                  autoAdjustOverflow={true}
                                                                                  blurDelay={0.15}
                                                                                  builtinPlacements={
                                                                                    Object {
                                                                                      "bottom": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "tc",
                                                                                          "bc",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "bottomLeft": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "tl",
                                                                                          "bl",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "bottomRight": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "tr",
                                                                                          "br",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "left": Object {
                                                                                        "offset": Array [
                                                                                          -4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "cr",
                                                                                          "cl",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "leftBottom": Object {
                                                                                        "offset": Array [
                                                                                          -4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "br",
                                                                                          "bl",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "leftTop": Object {
                                                                                        "offset": Array [
                                                                                          -4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "tr",
                                                                                          "tl",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "right": Object {
                                                                                        "offset": Array [
                                                                                          4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "cl",
                                                                                          "cr",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "rightBottom": Object {
                                                                                        "offset": Array [
                                                                                          4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "bl",
                                                                                          "br",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "rightTop": Object {
                                                                                        "offset": Array [
                                                                                          4,
                                                                                          0,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "tl",
                                                                                          "tr",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "top": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          -4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "bc",
                                                                                          "tc",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "topLeft": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          -4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "bl",
                                                                                          "tl",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                      "topRight": Object {
                                                                                        "offset": Array [
                                                                                          0,
                                                                                          -4,
                                                                                        ],
                                                                                        "overflow": Object {
                                                                                          "adjustX": 1,
                                                                                          "adjustY": 1,
                                                                                        },
                                                                                        "points": Array [
                                                                                          "br",
                                                                                          "tr",
                                                                                        ],
                                                                                        "targetOffset": Array [
                                                                                          0,
                                                                                          0,
                                                                                        ],
                                                                                      },
                                                                                    }
                                                                                  }
                                                                                  defaultPopupVisible={false}
                                                                                  destroyPopupOnHide={false}
                                                                                  focusDelay={0}
                                                                                  getDocument={[Function]}
                                                                                  getPopupClassNameFromAlign={[Function]}
                                                                                  hideAction={Array []}
                                                                                  mask={false}
                                                                                  maskClosable={true}
                                                                                  mouseEnterDelay={0.1}
                                                                                  mouseLeaveDelay={0.1}
                                                                                  onConfirm={[Function]}
                                                                                  onPopupAlign={[Function]}
                                                                                  onPopupVisibleChange={[Function]}
                                                                                  overlay={
                                                                                    <div>
                                                                                      <div
                                                                                        className="ant-popover-inner-content"
                                                                                      >
                                                                                        <div
                                                                                          className="ant-popover-message"
                                                                                        >
                                                                                          <Icon
                                                                                            type="exclamation-circle"
                                                                                          />
                                                                                          <div
                                                                                            className="ant-popover-message-title"
                                                                                          >
                                                                                            Are you sure to delete property "World"?
                                                                                          </div>
                                                                                        </div>
                                                                                        <div
                                                                                          className="ant-popover-buttons"
                                                                                        >
                                                                                          <Button
                                                                                            clicked={false}
                                                                                            ghost={false}
                                                                                            loading={false}
                                                                                            onClick={[Function]}
                                                                                            prefixCls="ant-btn"
                                                                                            size="small"
                                                                                          >
                                                                                            No
                                                                                          </Button>
                                                                                          <Button
                                                                                            clicked={false}
                                                                                            ghost={false}
                                                                                            loading={false}
                                                                                            onClick={[Function]}
                                                                                            prefixCls="ant-btn"
                                                                                            size="small"
                                                                                            type="primary"
                                                                                          >
                                                                                            Yes
                                                                                          </Button>
                                                                                        </div>
                                                                                      </div>
                                                                                    </div>
                                                                                  }
                                                                                  popup={[Function]}
                                                                                  popupAlign={Object {}}
                                                                                  popupClassName=""
                                                                                  popupPlacement="top"
                                                                                  popupStyle={Object {}}
                                                                                  popupTransitionName="zoom-big"
                                                                                  prefixCls="ant-popover"
                                                                                  showAction={Array []}
                                                                                >
                                                                                  <Button
                                                                                    clicked={false}
                                                                                    ghost={false}
                                                                                    loading={false}
                                                                                    onClick={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    prefixCls="ant-btn"
                                                                                    type="danger"
                                                                                  >
                                                                                    <button
                                                                                      className="ant-btn ant-btn-danger"
                                                                                      onClick={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      type="button"
                                                                                    >
                                                                                      <Icon
                                                                                        type="arrow-up"
                                                                                      >
                                                                                        <i
                                                                                          className="anticon anticon-arrow-up"
                                                                                        />
                                                                                      </Icon>
                                                                                      <span>
                                                                                        Delete
                                                                                      </span>
                                                                                    </button>
                                                                                  </Button>
                                                                                </Trigger>
                                                                              </Tooltip>
                                                                            </Tooltip>
                                                                          </_a>
                                                                          <FormItem
                                                                            colon={true}
                                                                            hasFeedback={false}
                                                                            label="Name"
                                                                            labelCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 6,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                            prefixCls="ant-form"
                                                                            wrapperCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 18,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <Row
                                                                              className="ant-form-item"
                                                                              gutter={0}
                                                                            >
                                                                              <div
                                                                                className="ant-row ant-form-item"
                                                                              >
                                                                                <Col
                                                                                  className="ant-form-item-label"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 6,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                                                  >
                                                                                    <label
                                                                                      className=""
                                                                                      htmlFor={null}
                                                                                      onClick={[Function]}
                                                                                      title="Name"
                                                                                    >
                                                                                      Name
                                                                                    </label>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  className="ant-form-item-control-wrapper"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 18,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-18"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-form-item-control "
                                                                                    >
                                                                                      <Input
                                                                                        disabled={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="Name"
                                                                                        prefixCls="ant-input"
                                                                                        size="large"
                                                                                        type="text"
                                                                                        value="World"
                                                                                      >
                                                                                        <input
                                                                                          className="ant-input ant-input-lg"
                                                                                          disabled={false}
                                                                                          onChange={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          placeholder="Name"
                                                                                          size="large"
                                                                                          type="text"
                                                                                          value="World"
                                                                                        />
                                                                                      </Input>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </FormItem>
                                                                          <FormItem
                                                                            colon={true}
                                                                            hasFeedback={false}
                                                                            label="Description"
                                                                            labelCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 6,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                            prefixCls="ant-form"
                                                                            wrapperCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 18,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <Row
                                                                              className="ant-form-item"
                                                                              gutter={0}
                                                                            >
                                                                              <div
                                                                                className="ant-row ant-form-item"
                                                                              >
                                                                                <Col
                                                                                  className="ant-form-item-label"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 6,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                                                  >
                                                                                    <label
                                                                                      className=""
                                                                                      htmlFor={null}
                                                                                      onClick={[Function]}
                                                                                      title="Description"
                                                                                    >
                                                                                      Description
                                                                                    </label>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  className="ant-form-item-control-wrapper"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 18,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-18"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-form-item-control "
                                                                                    >
                                                                                      <Input
                                                                                        disabled={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="Description"
                                                                                        prefixCls="ant-input"
                                                                                        size="large"
                                                                                        type="text"
                                                                                        value="World"
                                                                                      >
                                                                                        <input
                                                                                          className="ant-input ant-input-lg"
                                                                                          disabled={false}
                                                                                          onChange={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          placeholder="Description"
                                                                                          size="large"
                                                                                          type="text"
                                                                                          value="World"
                                                                                        />
                                                                                      </Input>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </FormItem>
                                                                          <FormItem
                                                                            colon={true}
                                                                            hasFeedback={false}
                                                                            label="Type"
                                                                            labelCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 6,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                            prefixCls="ant-form"
                                                                            wrapperCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 18,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <Row
                                                                              className="ant-form-item"
                                                                              gutter={0}
                                                                            >
                                                                              <div
                                                                                className="ant-row ant-form-item"
                                                                              >
                                                                                <Col
                                                                                  className="ant-form-item-label"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 6,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                                                  >
                                                                                    <label
                                                                                      className=""
                                                                                      htmlFor={null}
                                                                                      onClick={[Function]}
                                                                                      title="Type"
                                                                                    >
                                                                                      Type
                                                                                    </label>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  className="ant-form-item-control-wrapper"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 18,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-18"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-form-item-control "
                                                                                    >
                                                                                      <Select
                                                                                        choiceTransitionName="zoom"
                                                                                        onChange={[Function]}
                                                                                        prefixCls="ant-select"
                                                                                        showSearch={false}
                                                                                        size="large"
                                                                                        style={
                                                                                          Object {
                                                                                            "width": 120,
                                                                                          }
                                                                                        }
                                                                                        transitionName="slide-up"
                                                                                        value="binary"
                                                                                      >
                                                                                        <Select
                                                                                          allowClear={false}
                                                                                          backfill={false}
                                                                                          choiceTransitionName="zoom"
                                                                                          className="ant-select-lg"
                                                                                          defaultActiveFirstOption={true}
                                                                                          defaultOpen={false}
                                                                                          dropdownMatchSelectWidth={true}
                                                                                          dropdownMenuStyle={Object {}}
                                                                                          dropdownStyle={Object {}}
                                                                                          labelInValue={false}
                                                                                          notFoundContent="无匹配结果"
                                                                                          onBlur={[Function]}
                                                                                          onChange={[Function]}
                                                                                          onDeselect={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          onSearch={[Function]}
                                                                                          onSelect={[Function]}
                                                                                          optionFilterProp="value"
                                                                                          optionLabelProp="children"
                                                                                          placeholder=""
                                                                                          prefixCls="ant-select"
                                                                                          showArrow={true}
                                                                                          showSearch={false}
                                                                                          style={
                                                                                            Object {
                                                                                              "width": 120,
                                                                                            }
                                                                                          }
                                                                                          transitionName="slide-up"
                                                                                          value="binary"
                                                                                        >
                                                                                          <SelectTrigger
                                                                                            defaultActiveFirstOption={true}
                                                                                            dropdownMatchSelectWidth={true}
                                                                                            dropdownMenuStyle={Object {}}
                                                                                            dropdownStyle={Object {}}
                                                                                            inputValue=""
                                                                                            onDropdownVisibleChange={[Function]}
                                                                                            onMenuDeselect={[Function]}
                                                                                            onMenuSelect={[Function]}
                                                                                            onPopupFocus={[Function]}
                                                                                            options={Array []}
                                                                                            prefixCls="ant-select"
                                                                                            showSearch={false}
                                                                                            transitionName="slide-up"
                                                                                            value={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "key": "binary",
                                                                                                  "label": "binary",
                                                                                                  "title": undefined,
                                                                                                },
                                                                                              ]
                                                                                            }
                                                                                            visible={false}
                                                                                          >
                                                                                            <Trigger
                                                                                              action={Array []}
                                                                                              afterPopupVisibleChange={[Function]}
                                                                                              blurDelay={0.15}
                                                                                              builtinPlacements={
                                                                                                Object {
                                                                                                  "bottomLeft": Object {
                                                                                                    "offset": Array [
                                                                                                      0,
                                                                                                      4,
                                                                                                    ],
                                                                                                    "overflow": Object {
                                                                                                      "adjustX": 0,
                                                                                                      "adjustY": 1,
                                                                                                    },
                                                                                                    "points": Array [
                                                                                                      "tl",
                                                                                                      "bl",
                                                                                                    ],
                                                                                                  },
                                                                                                  "topLeft": Object {
                                                                                                    "offset": Array [
                                                                                                      0,
                                                                                                      -4,
                                                                                                    ],
                                                                                                    "overflow": Object {
                                                                                                      "adjustX": 0,
                                                                                                      "adjustY": 1,
                                                                                                    },
                                                                                                    "points": Array [
                                                                                                      "bl",
                                                                                                      "tl",
                                                                                                    ],
                                                                                                  },
                                                                                                }
                                                                                              }
                                                                                              defaultActiveFirstOption={true}
                                                                                              defaultPopupVisible={false}
                                                                                              destroyPopupOnHide={false}
                                                                                              dropdownMatchSelectWidth={true}
                                                                                              dropdownMenuStyle={Object {}}
                                                                                              dropdownStyle={Object {}}
                                                                                              focusDelay={0}
                                                                                              getDocument={[Function]}
                                                                                              getPopupClassNameFromAlign={[Function]}
                                                                                              hideAction={
                                                                                                Array [
                                                                                                  "click",
                                                                                                ]
                                                                                              }
                                                                                              inputValue=""
                                                                                              mask={false}
                                                                                              maskClosable={true}
                                                                                              mouseEnterDelay={0}
                                                                                              mouseLeaveDelay={0.1}
                                                                                              onDropdownVisibleChange={[Function]}
                                                                                              onMenuDeselect={[Function]}
                                                                                              onMenuSelect={[Function]}
                                                                                              onPopupAlign={[Function]}
                                                                                              onPopupVisibleChange={[Function]}
                                                                                              options={Array []}
                                                                                              popup={
                                                                                                <DropdownMenu
                                                                                                  defaultActiveFirstOption={true}
                                                                                                  dropdownMenuStyle={Object {}}
                                                                                                  firstActiveValue={undefined}
                                                                                                  inputValue=""
                                                                                                  menuItems={Array []}
                                                                                                  multiple={undefined}
                                                                                                  onMenuDeselect={[Function]}
                                                                                                  onMenuSelect={[Function]}
                                                                                                  onPopupFocus={[Function]}
                                                                                                  prefixCls="ant-select-dropdown"
                                                                                                  value={
                                                                                                    Array [
                                                                                                      Object {
                                                                                                        "key": "binary",
                                                                                                        "label": "binary",
                                                                                                        "title": undefined,
                                                                                                      },
                                                                                                    ]
                                                                                                  }
                                                                                                  visible={false}
                                                                                                />
                                                                                              }
                                                                                              popupAlign={Object {}}
                                                                                              popupClassName="ant-select-dropdown--single"
                                                                                              popupPlacement="bottomLeft"
                                                                                              popupStyle={Object {}}
                                                                                              popupTransitionName="slide-up"
                                                                                              popupVisible={false}
                                                                                              prefixCls="ant-select-dropdown"
                                                                                              showAction={
                                                                                                Array [
                                                                                                  "click",
                                                                                                ]
                                                                                              }
                                                                                              showSearch={false}
                                                                                              transitionName="slide-up"
                                                                                              value={
                                                                                                Array [
                                                                                                  Object {
                                                                                                    "key": "binary",
                                                                                                    "label": "binary",
                                                                                                    "title": undefined,
                                                                                                  },
                                                                                                ]
                                                                                              }
                                                                                              visible={false}
                                                                                            >
                                                                                              <div
                                                                                                className="ant-select-lg ant-select ant-select-enabled"
                                                                                                onBlur={[Function]}
                                                                                                onClick={[Function]}
                                                                                                onFocus={[Function]}
                                                                                                onMouseDown={[Function]}
                                                                                                onTouchStart={[Function]}
                                                                                                style={
                                                                                                  Object {
                                                                                                    "width": 120,
                                                                                                  }
                                                                                                }
                                                                                              >
                                                                                                <div
                                                                                                  aria-autocomplete="list"
                                                                                                  aria-expanded={false}
                                                                                                  aria-haspopup="true"
                                                                                                  className="ant-select-selection
            ant-select-selection--single"
                                                                                                  onKeyDown={[Function]}
                                                                                                  role="combobox"
                                                                                                  tabIndex={0}
                                                                                                >
                                                                                                  <div
                                                                                                    className="ant-select-selection__rendered"
                                                                                                  >
                                                                                                    <div
                                                                                                      className="ant-select-selection-selected-value"
                                                                                                      style={
                                                                                                        Object {
                                                                                                          "display": "block",
                                                                                                          "opacity": 1,
                                                                                                        }
                                                                                                      }
                                                                                                      title="binary"
                                                                                                    >
                                                                                                      binary
                                                                                                    </div>
                                                                                                  </div>
                                                                                                  <span
                                                                                                    className="ant-select-arrow"
                                                                                                    onClick={[Function]}
                                                                                                    style={
                                                                                                      Object {
                                                                                                        "WebkitUserSelect": "none",
                                                                                                        "userSelect": "none",
                                                                                                      }
                                                                                                    }
                                                                                                    unselectable="unselectable"
                                                                                                  >
                                                                                                    <b />
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                            </Trigger>
                                                                                          </SelectTrigger>
                                                                                        </Select>
                                                                                      </Select>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </FormItem>
                                                                          <FormItem
                                                                            colon={true}
                                                                            hasFeedback={false}
                                                                            label="Enum"
                                                                            labelCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 6,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                            prefixCls="ant-form"
                                                                            wrapperCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 18,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <Row
                                                                              className="ant-form-item"
                                                                              gutter={0}
                                                                            >
                                                                              <div
                                                                                className="ant-row ant-form-item"
                                                                              >
                                                                                <Col
                                                                                  className="ant-form-item-label"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 6,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                                                  >
                                                                                    <label
                                                                                      className=""
                                                                                      htmlFor={null}
                                                                                      onClick={[Function]}
                                                                                      title="Enum"
                                                                                    >
                                                                                      Enum
                                                                                    </label>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  className="ant-form-item-control-wrapper"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 18,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-18"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-form-item-control "
                                                                                    >
                                                                                      <Input
                                                                                        defaultValue="Hello, World"
                                                                                        disabled={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="Values separated by commas"
                                                                                        prefixCls="ant-input"
                                                                                        size="large"
                                                                                        type="text"
                                                                                      >
                                                                                        <input
                                                                                          className="ant-input ant-input-lg"
                                                                                          defaultValue="Hello, World"
                                                                                          disabled={false}
                                                                                          onChange={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          placeholder="Values separated by commas"
                                                                                          size="large"
                                                                                          type="text"
                                                                                        />
                                                                                      </Input>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </FormItem>
                                                                          <FormItem
                                                                            colon={true}
                                                                            hasFeedback={false}
                                                                            label="Options"
                                                                            labelCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 6,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                            prefixCls="ant-form"
                                                                            wrapperCol={
                                                                              Object {
                                                                                "sm": Object {
                                                                                  "span": 18,
                                                                                },
                                                                                "xs": Object {
                                                                                  "span": 24,
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <Row
                                                                              className="ant-form-item"
                                                                              gutter={0}
                                                                            >
                                                                              <div
                                                                                className="ant-row ant-form-item"
                                                                              >
                                                                                <Col
                                                                                  className="ant-form-item-label"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 6,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                                                  >
                                                                                    <label
                                                                                      className=""
                                                                                      htmlFor={null}
                                                                                      onClick={[Function]}
                                                                                      title="Options"
                                                                                    >
                                                                                      Options
                                                                                    </label>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  className="ant-form-item-control-wrapper"
                                                                                  sm={
                                                                                    Object {
                                                                                      "span": 18,
                                                                                    }
                                                                                  }
                                                                                  xs={
                                                                                    Object {
                                                                                      "span": 24,
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <div
                                                                                    className="ant-form-item-control-wrapper ant-col-xs-24 ant-col-sm-18"
                                                                                  >
                                                                                    <div
                                                                                      className="ant-form-item-control "
                                                                                    >
                                                                                      <Checkbox
                                                                                        checked={true}
                                                                                        indeterminate={false}
                                                                                        onChange={[Function]}
                                                                                        prefixCls="ant-checkbox"
                                                                                        size="large"
                                                                                      >
                                                                                        <label
                                                                                          className="ant-checkbox-wrapper"
                                                                                        >
                                                                                          <Checkbox
                                                                                            checked={true}
                                                                                            className=""
                                                                                            defaultChecked={false}
                                                                                            onBlur={[Function]}
                                                                                            onChange={[Function]}
                                                                                            onFocus={[Function]}
                                                                                            prefixCls="ant-checkbox"
                                                                                            size="large"
                                                                                            style={Object {}}
                                                                                            type="checkbox"
                                                                                          >
                                                                                            <span
                                                                                              className="ant-checkbox ant-checkbox-checked"
                                                                                              style={Object {}}
                                                                                            >
                                                                                              <input
                                                                                                checked={true}
                                                                                                className="ant-checkbox-input"
                                                                                                onBlur={[Function]}
                                                                                                onChange={[Function]}
                                                                                                onFocus={[Function]}
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span
                                                                                                className="ant-checkbox-inner"
                                                                                              />
                                                                                            </span>
                                                                                          </Checkbox>
                                                                                          <span>
                                                                                            Required
                                                                                          </span>
                                                                                        </label>
                                                                                      </Checkbox>
                                                                                      <Checkbox
                                                                                        checked={true}
                                                                                        indeterminate={false}
                                                                                        onChange={[Function]}
                                                                                        prefixCls="ant-checkbox"
                                                                                        size="large"
                                                                                      >
                                                                                        <label
                                                                                          className="ant-checkbox-wrapper"
                                                                                        >
                                                                                          <Checkbox
                                                                                            checked={true}
                                                                                            className=""
                                                                                            defaultChecked={false}
                                                                                            onBlur={[Function]}
                                                                                            onChange={[Function]}
                                                                                            onFocus={[Function]}
                                                                                            prefixCls="ant-checkbox"
                                                                                            size="large"
                                                                                            style={Object {}}
                                                                                            type="checkbox"
                                                                                          >
                                                                                            <span
                                                                                              className="ant-checkbox ant-checkbox-checked"
                                                                                              style={Object {}}
                                                                                            >
                                                                                              <input
                                                                                                checked={true}
                                                                                                className="ant-checkbox-input"
                                                                                                onBlur={[Function]}
                                                                                                onChange={[Function]}
                                                                                                onFocus={[Function]}
                                                                                                type="checkbox"
                                                                                              />
                                                                                              <span
                                                                                                className="ant-checkbox-inner"
                                                                                              />
                                                                                            </span>
                                                                                          </Checkbox>
                                                                                          <span>
                                                                                            Is array
                                                                                          </span>
                                                                                        </label>
                                                                                      </Checkbox>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </FormItem>
                                                                        </div>
                                                                      </SubFormItem>
                                                                    </Connect(SubFormItem)>
                                                                  </div>
                                                                </div>
                                                              </PanelContent>
                                                            </AnimateChild>
                                                          </Animate>
                                                        </div>
                                                      </CollapsePanel>
                                                    </div>
                                                  </Collapse>
                                                </Collapse>
                                                <Button
                                                  clicked={false}
                                                  ghost={false}
                                                  loading={false}
                                                  onClick={[Function]}
                                                  prefixCls="ant-btn"
                                                  size="large"
                                                  type="primary"
                                                >
                                                  <button
                                                    className="ant-btn ant-btn-primary ant-btn-lg"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <Icon
                                                      type="plus"
                                                    >
                                                      <i
                                                        className="anticon anticon-plus"
                                                      />
                                                    </Icon>
                                                    <span>
                                                      Add property
                                                    </span>
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Card>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </FormItem>
                            </Connect(FormItem)>
                          </div>
                        </div>
                      </PanelContent>
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="AnsweringRuleInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    AnsweringRuleInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
              <CollapsePanel
                destroyInactivePanel={false}
                header="VersionInfo"
                headerClass=""
                isActive={false}
                onItemClick={[Function]}
                openAnimation={
                  Object {
                    "appear": [Function],
                    "enter": [Function],
                    "leave": [Function],
                  }
                }
                prefixCls="ant-collapse"
                showArrow={true}
              >
                <div
                  className="ant-collapse-item"
                >
                  <div
                    aria-expanded={false}
                    className="ant-collapse-header"
                    onClick={[Function]}
                    role="tab"
                  >
                    <i
                      className="arrow"
                    />
                    VersionInfo
                  </div>
                  <Animate
                    animation={
                      Object {
                        "appear": [Function],
                        "enter": [Function],
                        "leave": [Function],
                      }
                    }
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="isActive"
                    transitionAppear={false}
                    transitionEnter={true}
                    transitionLeave={true}
                  >
                    <AnimateChild
                      animation={
                        Object {
                          "appear": [Function],
                          "enter": [Function],
                          "leave": [Function],
                        }
                      }
                      transitionAppear={false}
                      transitionEnter={true}
                      transitionLeave={true}
                    >
                      <PanelContent
                        destroyInactivePanel={false}
                        isActive={false}
                        prefixCls="ant-collapse"
                      />
                    </AnimateChild>
                  </Animate>
                </div>
              </CollapsePanel>
            </div>
          </Collapse>
        </Collapse>
        <Button
          clicked={false}
          ghost={false}
          loading={false}
          onClick={[Function]}
          prefixCls="ant-btn"
          size="large"
          type="primary"
        >
          <button
            className="ant-btn ant-btn-primary ant-btn-lg"
            onClick={[Function]}
            type="button"
          >
            <Icon
              type="plus"
            >
              <i
                className="anticon anticon-plus"
              />
            </Icon>
            <span>
              Add model
            </span>
          </button>
        </Button>
      </div>
    </Models>
  </Connect(Models)>
</Provider>
`;
